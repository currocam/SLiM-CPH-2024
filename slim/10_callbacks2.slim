// set up a simple neutral simulation
initialize() {
	initializeMutationRate(1e-7);
	
	// m1 mutation type: neutral
	initializeMutationType("m1", 0.5, "f", 0.0);
	// m2 mutation type: balanced
	initializeMutationType("m2", 0.5, "f", 0.1);
	
	// g1 genomic element type: uses m1 for all mutations
	initializeGenomicElementType("g1", c(m1, m2), c(9e5, 1));
	
	// uniform chromosome of length 100 kb with uniform recombination
	initializeGenomicElement(g1, 0, 99999);
	initializeRecombinationRate(1e-8);
}

// Negative frequency-dependent selection
mutationEffect(m2) {
	if (homozygous)
	{
		return 1.5 - sim.mutationFrequencies(p1, mut);	
	}
	return 1.25 - sim.mutationFrequencies(p1, mut)/2;
}



// create a population of 500 individuals
1 early() {
	sim.addSubpop("p1", 500);
}

1e7 early() { sim.outputFixedMutations(); }
